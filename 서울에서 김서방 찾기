# Lv1
## 문제 설명  
`String`형 배열 `seoul`의 요소 중 "Kim"의 위치 `x`를 찾아, `"김서방은 x에 있다"`는 `String`을 반환하는 함수 `solution`을 작성함.  
- `"Kim"`은 반드시 배열 안에 존재하며, 한 번만 나타남.  

---

### 제한 사항  
1. `seoul`의 길이는 1 이상 1000 이하임.  
2. `seoul`의 각 원소의 길이는 1 이상 20 이하의 문자열임.  
3. `"Kim"`은 반드시 `seoul` 안에 포함되어 있음.  

---

## 코드
```java
class Solution {
    public String solution(String[] seoul) {
        int index = 0;

        // "Kim"의 위치를 찾기
        for (int i = 0; i < seoul.length; i++) {
            if (seoul[i].equals("Kim")) {
                index = i;
                break;
            }
        }

        // 결과 반환
        return "김서방은 " + index + "에 있다";
    }
}
## 코드 설명
int index = 0;: "Kim"의 위치를 저장할 변수 index 초기화.
for (int i = 0; i < seoul.length; i++): 배열 seoul을 순차적으로 탐색.
if (seoul[i].equals("Kim")): 배열의 각 요소가 "Kim"인지 확인.
index = i; break;: "Kim"이 발견되면 index에 해당 인덱스를 저장하고 반복문 종료.
return "김서방은 " + index + "에 있다";: 최종적으로 "김서방은 x에 있다" 형태로 결과 반환.
## 주요 문법
equals(): 문자열이 같은지 비교하는 메서드.
