# Lv1
## 문제 설명  
두 정수 `a`, `b`가 주어졌을 때 `a`와 `b` 사이에 속한 모든 정수의 합을 반환하는 함수 `solution`을 작성함.  
- 예를 들어, `a = 3`, `b = 5`인 경우 `3 + 4 + 5 = 12`이므로 `12`를 반환함.  

---

### 제한 조건  
1. `a`와 `b`가 같은 경우는 둘 중 아무 수나 반환하면 됨.  
2. `a`와 `b`는 `-10,000,000` 이상 `10,000,000` 이하인 정수임.  
3. `a`와 `b`의 대소관계는 정해져 있지 않음.  

---

## 1번 코드
```java
class Solution {
    public long solution(int a, int b) {
        long answer = 0;
        if (a <= b) {
            for (int i = a; i <= b; i++) {
                answer += i;
            }
        } else {
            for (int i = b; i <= a; i++) {
                answer += i;
            }
        }
        return answer;
    }
}
## 2번 코드
class Solution {
    public long solution(int a, int b) {
        return sumAtoB(Math.min(a, b), Math.max(b, a));
    }

    private long sumAtoB(long a, long b) {
        return (b - a + 1) * (a + b) / 2;
    }
}

##코드 설명
1번 코드:
두 정수 a, b 중 작은 값에서 큰 값까지 반복문을 사용해 합계를 구함.

작은 값이 a라면 for (int i = a; i <= b; i++)로 반복문 실행
작은 값이 b라면 for (int i = b; i <= a; i++)로 반복문 실행
2번 코드:
두 정수 중 작은 값을 Math.min(a, b)로, 큰 값을 Math.max(b, a)로 계산한 후 등차수열의 합 공식을 이용해 값을 반환함.

공식을 사용: (b - a + 1) * (a + b) / 2
## 문법 설명
Math.min(a, b): a, b 중 작은 값을 반환함
Math.max(a, b): a, b 중 큰 값을 반환함
for (초기값; 조건; 증가값): 조건을 만족하는 동안 반복문을 실행함 
이 부분도 합쳐서 그냥 아예 한번에 복사 하게 문자 파일로 줄래
