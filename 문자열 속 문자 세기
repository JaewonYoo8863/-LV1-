# Lv1
## 문제 설명
대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.

예를 들어 s가 "pPoooyY"면 true를 return하고 "Pyy"라면 false를 return합니다.
---

## 1번 코드
```java
class Solution {
    boolean solution(String s) {
        boolean answer = true;
        int pCount=0;
        int yCount=0;
       
        char[] charArray = s.toCharArray();
    
        for (char c : charArray) {
        if(c =='p'|| c== 'P'){
            pCount++;
            
        }else if(c=='y'|| c=='Y'){
            yCount++;
        }

    } 
        if(pCount != yCount)
            answer= false;

        return answer;
    }
}
## 2번 코드
class Solution {
    boolean solution(String s) {
        s = s.toUpperCase();

        return s.chars().filter( e -> 'P'== e).count() == s.chars().filter( e -> 'Y'== e).count();
    }
}
## 코드 설명
1번 코드: 문자열을 char타입의 배열로 받아서 반복문을 통해 개수를 세서 비교
2번 코드: 모든 문자열을 대문자로 바꿔주고 필터링하여 개수를 세서 비교
##문법 
.toCharArray(); -> 문자열을 char 타입의 배열로 바꿔줌
.toUpperCase() : 문자열을 모두 대문자로 변환해줌
.chars() : 문자열을 IntStream으로 변환해 문자 하나하나를 처리할 수 있게 함
.filter(e -> 조건) : 스트림에서 조건에 맞는 요소만 걸러냄
.count() : 스트림에서 걸러진 요소의 개수를 셈
