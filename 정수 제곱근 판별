# Lv1
## 문제 설명  
정수 `n`이 주어질 때, `n`이 어떤 정수의 제곱이라면 `(그 정수 + 1)`의 제곱을 반환하고, 그렇지 않으면 `-1`을 반환하는 함수 `solution`을 작성함.  
- 예를 들어, `n = 121`이라면 `121 = 11 * 11`이므로 `(11 + 1)^2 = 144`를 반환함.  
- 반대로, `n = 3`이라면 어떤 정수의 제곱도 아니므로 `-1`을 반환함.  

---

### 제한 조건  
n은 1이상, 50000000000000 이하인 양의 정수입니다.  

---

## 코드
```java
class Solution {
    public long solution(long n) {
        long sqrt = (long) Math.sqrt(n); // n의 제곱근을 계산

        // 제곱근을 제곱했을 때 n과 같은지 확인
        if (sqrt * sqrt == n) {
            // 제곱근이 맞다면, (sqrt + 1)의 제곱 반환
            return (sqrt + 1) * (sqrt + 1);
        } else {
            // 제곱근이 아니라면 -1 반환
            return -1;
        }
    }
}

## 코드 설명
Math.sqrt(n): n의 제곱근을 계산함.
반환값은 double 타입이므로, 정수 부분만 필요할 경우 (long)으로 변환.
제곱근 검증: sqrt * sqrt가 n과 같은지 비교.
같은 경우: (sqrt + 1)^2 값을 반환.
다른 경우: -1 반환.
## 주요 문법
Math.sqrt(n): n의 제곱근을 반환함.
(long): 실수형(double) 값을 정수형(long)으로 변환함.
